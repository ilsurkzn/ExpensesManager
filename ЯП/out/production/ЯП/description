Завершите работу над кодом финансового
приложения — соберите в отдельный класс код,
касающийся трат пользователя. Назовите этот класс
ExpensesManager (англ. «менеджер по расходам») и
опишите его, действуя по пунктам:

    1. Объявите одно поле — массив трат double[] expenses.
    2. Объявите конструктор, а внутри него инициализируйте
    массив так же, как это происходит сейчас в классе
    Praktikum — в нём должно храниться семь значений.
    3. Перенесите в ExpensesManager код методов saveExpense,
    findMaxExpense и printAllExpenses. Удалите перед
    названием методов слова public и static.
    4. В классе Praktikum должно остаться взаимодействие с
    пользователем — печать меню, вопросов пользователю,
    а также считывание его ответов: команд, значений
    зарплаты, дней и трат.
    5. Параметры метода saveExpense внутри класса
    ExpensesManager изменятся: теперь он должен
    принимать остаток на счёте moneyBeforeSalary,
    размер траты expense и номер дня недели day, за который
    нужно её учесть.
    6. Уберите из методов findMaxExpense и printAllExpenses
    параметр double[] expenses. Теперь он стал полем
    класса, и его не нужно передавать.
    7. Создайте объект класса ExpensesManager и вызовите его
    методы внутри класса Praktikum.

Вывод

